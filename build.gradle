/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'david' at '14/07/15 1:24 PM' with Gradle 2.4
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.4/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.12'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
*/

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

import org.slf4j.Logger
import org.slf4j.LoggerFactory

mainClassName = 'org.main.JDriveMain'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile     'com.google.api-client:google-api-client:1.20.0'
    compile     'com.google.oauth-client:google-oauth-client-jetty:1.20.0'
    compile     'com.google.apis:google-api-services-drive:v2-rev170-1.20.0'
    compile     'javax.inject:javax.inject:1'
    compile     'com.google.inject:guice:4.0'
    compile     'aopalliance:aopalliance:1.0'
    compile     'com.google.inject:guice-parent:4.0'
    compile     'org.slf4j:slf4j-api:1.7.12'

    //OrientDB dependancy
    compile     'com.orientechnologies:orientdb-core:2.1-rc6'
    compile     'com.orientechnologies:orientdb-client:2.1-rc6'
    compile     'com.orientechnologies:orientdb-enterprise:2.1-rc6'
    compile     'com.tinkerpop.blueprints:blueprints-core:2.6.0'
    compile     'com.orientechnologies:orientdb-graphdb:2.1-rc6'
    compile     'net.java.dev.jna:jna:4.1.0'
    compile     'net.java.dev.jna:jna-platform:4.1.0'
    compile     'com.googlecode.concurrentlinkedhashmap:concurrentlinkedhashmap-lru:1.4.2'
//    compile     'com.google.jimfs:jimfs:1.0'
    compile     'junit:junit:4.12'
    compile     fileTree( dir: 'libs', include: '*.jar')
    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.mockito:mockito-all:1.10.19'
}

//dependencies {
//    runtime module("com.google.jimfs:jimfs:1.0") {
//        dependency("com.google.guava:guava:r01") {
//            transitive = true
//        }
//    }
//}

sourceSets {
    main {
        output.resourcesDir = "build/resources/"
    }
}

test {
    println "Test task"
    // enable TestNG support (default is JUnit)
    useJUnit()

//    // set a system property for the test JVM(s)
//    systemProperty 'some.prop', 'value'
//
//    // explicitly include or exclude tests
//    include 'org/foo/**'
//    exclude 'org/boo/**'

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // set heap size for the test JVM(s)
    minHeapSize = "128m"
    maxHeapSize = "512m"

    // set JVM arguments for the test JVM(s)
    // jvmArgs '-XX:MaxPermSize=256m'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}


