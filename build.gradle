def neo4jVersion = "2.2.4"

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'

mainClassName = 'main.JDriveMain'
sourceCompatibility = 1.8
targetCompatibility = 1.8
version = '1.0'

applicationDefaultJvmArgs = ["-Dgreeting.language=en"]

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    compile     'com.google.api-client:google-api-client:1.20.0'
    compile     'com.google.oauth-client:google-oauth-client-jetty:1.20.0'
    compile     'com.google.apis:google-api-services-drive:v2-rev170-1.20.0'
    compile     'javax.inject:javax.inject:1'
    compile     'com.google.inject:guice:4.0'
    compile     'aopalliance:aopalliance:1.0'
    compile     'com.google.inject:guice-parent:4.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'

    compile     "org.neo4j:neo4j:${neo4jVersion}"
    compile     'junit:junit:4.12'
    compile     fileTree( dir: 'libs', include: '*.jar')

    testCompile group: 'junit', name: 'junit', version: '4.+'
    testCompile 'org.neo4j:neo4j-kernel:2.2.4-tests'
    testCompile 'org.neo4j:neo4j-io:2.2.4-tests'
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.jukito:jukito:1.4.1'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'org.easymock:easymock:3.3.1'
}


test {
    println "Test"
    // enable TestNG support (default is JUnit)
    useJUnit() {
        environment 'env', 'test'
    }

    delete "build/resources/test/"

    systemProperty 'logback.configurationFile', 'logback.xml'

    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true

    // set heap size for the test JVM(s)
    minHeapSize = "128m"
    maxHeapSize = "512m"

    // set JVM arguments for the test JVM(s)
    // jvmArgs '-XX:MaxPermSize=256m'

    // listen to events in the test execution lifecycle
    beforeTest { descriptor ->
        logger.lifecycle("Running test: " + descriptor)
    }

    // listen to standard out and standard error of the test JVM(s)
    onOutput { descriptor, event ->
        logger.lifecycle("Test: " + descriptor + " produced standard out/err: " + event.message )
    }
}

run {
    systemProperty 'logback.configurationFile', 'logback.xml'
}

task('clean') <<
{
    println("Clean")
    delete "db"
    delete "/Users/david/JDrive"
}

defaultTasks 'clean', 'run'


//gradle -Dtest.single=TreeBuilderTest test